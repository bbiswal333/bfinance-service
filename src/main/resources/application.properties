# ==============================================================
# Tomcat Server Configuration
# ==============================================================
server.port=5555

# ==============================================================
# JPA Configuration
# ==============================================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults= false

# ==============================================================
# = Logging
# ==============================================================
logging.level.com.bytestree.restful=DEBUG

# ==============================================================
# Local Database Configuration
# ==============================================================
jdbc.sql.driverClassName = org.postgresql.Driver
jdbc.sql.url = jdbc:postgresql://localhost:5432/postgres
jdbc.sql.username =  postgres
jdbc.sql.password =  postgres

# ===============================
# = MAIL configurations
# ===============================
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.gmail.com
spring.mail.username=bbiswal333@gmail.com
spring.mail.password=####
spring.mail.port=587

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.protocol=smtp
spring.mail.test-connection=false

    
# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from app_user where email=?
spring.queries.roles-query=select u.email, r.role from app_user u inner join user_role ur on(u.user_id=ur.user_id) inner join app_role r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================
# = Spring Security / JWT and OAUTH2 Configuration
# ==============================================================
security.oauth2.resource.filter-order=3

security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT Example Realm

security.jwt.client-id=testjwtclientid
security.jwt.client-secret=XY7kmzoNzl100
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid
security.jwt.access-token-validity-seconds=6000
